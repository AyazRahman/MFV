#BlueJ class context
comment0.target=Batch
comment1.params=
comment1.target=Batch()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Batch\r\n
comment10.params=newBatchID
comment10.target=void\ setBatchID(int)
comment11.params=newQuantity
comment11.target=void\ setQuantity(int)
comment12.params=newDateReceived
comment12.target=void\ setDateReceived(java.util.Date)
comment13.params=newSaleMethod
comment13.target=void\ setSaleMethod(java.lang.String)
comment14.params=newPrice
comment14.target=void\ setPrice(double)
comment15.params=newSource
comment15.target=void\ setSource(java.lang.String)
comment16.params=newName
comment16.target=void\ setName(java.lang.String)
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\r\n\ This\ method\ is\ used\ to\ covert\ variables\ to\ String\ and\r\n\ add\ commas\ between\ each\ variable\ integers\ to\ be\ easly\ saved\ in\ csv\ file.\r\n\ @return\ String\ This\ returns\ a\ string\ of\ all\ Batch\ and\ User\ classes\ variables.\r\n
comment2.params=newBatchID\ newQuantity\ newDateReceived\ newSaleMethod\ newPrice\ newSource\ newName
comment2.target=Batch(int,\ int,\ java.lang.String,\ java.lang.String,\ double,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ Batch\r\n
comment3.params=
comment3.target=int\ getBatchID()
comment4.params=
comment4.target=int\ getQuantity()
comment5.params=
comment5.target=java.util.Date\ getDateReceived()
comment6.params=
comment6.target=java.lang.String\ getSaleMethod()
comment7.params=
comment7.target=double\ getPrice()
comment8.params=
comment8.target=java.lang.String\ getSource()
comment9.params=
comment9.target=java.lang.String\ getName()
numComments=18
